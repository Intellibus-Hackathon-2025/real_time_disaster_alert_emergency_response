version: '3.8'

services:
  api:
    build: .
    version: '3.8'

    services:
      api:
        build: .
        ports:
          - "4000:4000"
        depends_on:
          postgres:
            condition: service_healthy  # Wait for Postgres to be healthy
        environment:
          SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/realtime-emergency-response-alert-system-db
          SPRING_DATASOURCE_USERNAME: root
          SPRING_DATASOURCE_PASSWORD: root
        networks:
          - app-network

      postgres:
        image: postgres:latest
        ports:
          - "5432:5432"
        environment:
          POSTGRES_DB: realtime-emergency-response-alert-system-db
          POSTGRES_USER: root
          POSTGRES_PASSWORD: root
        volumes:
          - postgres-data:/var/lib/postgresql/data
        healthcheck:
          test: [ "CMD-SHELL", "pg_isready -U root" ]  # Check if Postgres is ready
          interval: 5s
          timeout: 5s
          retries: 10
        networks:
          - app-network

    networks:
      app-network:
        driver: bridge

    volumes:
      postgres-data:
